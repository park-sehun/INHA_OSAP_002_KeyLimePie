        -:    0:Source:/home/jihwan/KeyLimePie/ossavltree/node.h
        -:    0:Graph:erase.cc.gcno
        -:    0:Data:erase.cc.gcda
        -:    0:Runs:3
        -:    1:/*
        -:    2:BSD-3-Clause
        -:    3:Copyright (c) 2023, Jihwan Kim
        -:    4:All rights reserved.
        -:    5: 
        -:    6:Redistribution and use in source and binary forms, with or without
        -:    7:modification, are permitted provided that the following conditions are met:
        -:    8: 
        -:    9:* Redistributions of source code must retain the above copyright
        -:   10:notice, this list of conditions and the following disclaimer.
        -:   11:* Redistributions in binary form must reproduce the above copyright
        -:   12:notice, this list of conditions and the following disclaimer in the
        -:   13:documentation and/or other materials provided with the distribution.
        -:   14:* Neither the name of the <organization> nor the
        -:   15:names of its contributors may be used to endorse or promote products
        -:   16:derived from this software without specific prior written permission.
        -:   17: 
        -:   18:THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
        -:   19:ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
        -:   20:WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        -:   21:DISCLAIMED. IN NO EVENT SHALL Jihwan Kim Yun BE LIABLE FOR ANY
        -:   22:DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
        -:   23:(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   24:LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
        -:   25:ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
        -:   26:(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
        -:   27:SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   28:
        -:   29:작성자 : 김지환
        -:   30:작성일 : 2023년 12월 13일
        -:   31:*/
        -:   32:#ifndef KEYLIMEPIE_OSSAVLTREE_NODE_H_
        -:   33:#define KEYLIMEPIE_OSSAVLTREE_NODE_H_
        -:   34:
        -:   35:#include <iostream>
        -:   36:
        -:   37:class Node
        -:   38:{
        -:   39:};
        -:   40:
        -:   41:class Int_Node : public Node
        -:   42:{
        -:   43:public:
        -:   44:    Int_Node() : key_(0) {}
        -:   45:    Int_Node(int x) : key_(x) {}
       39:   46:    void setKey_(int x) { key_ = x; }
    #####:   47:    int getKey_() { return key_; }
        -:   48:
        -:   49:private:
        -:   50:    int key_; // key값
        -:   51:};
        -:   52:
        -:   53:class Int_AVLtree_Node : public Int_Node
        -:   54:{
        -:   55:public:
        -:   56:    Int_AVLtree_Node() : Int_Node(0), parent_node(NULL), left_child(NULL), right_child(NULL), left_subtree_size(0), height(0) {}
        -:   57:    Int_AVLtree_Node(int x) : Int_Node(x), parent_node(NULL), left_child(NULL), right_child(NULL), left_subtree_size(0), height(0) {} // 생성자 함수
    #####:   58:    void setLeft_child(Int_AVLtree_Node *n) { left_child = n; }
    #####:   59:    Int_AVLtree_Node *getLeft_child() { return left_child; }
    #####:   60:    void setRight_child(Int_AVLtree_Node *n) { right_child = n; }
    #####:   61:    Int_AVLtree_Node *getRight_child() { return right_child; }
    #####:   62:    void setParent_node(Int_AVLtree_Node *n) { parent_node = n; }
    #####:   63:    Int_AVLtree_Node *getParent_node() { return parent_node; }
        -:   64:    void setLeft_subtree_size(int x) { left_subtree_size = x; }
        -:   65:    int getLeft_subtree_size() { return left_subtree_size; }
        -:   66:    void setHeight(int x) { height = x; }
        -:   67:    int getHeight() { return height; }
        -:   68:
        -:   69:private:
        -:   70:    Int_AVLtree_Node *left_child;  // 왼쪽 자식노드
        -:   71:    Int_AVLtree_Node *right_child; // 오른쪽 자식노드
        -:   72:    Int_AVLtree_Node *parent_node; // 부모 노드
        -:   73:    int left_subtree_size;         // 왼쪽 서브트리의 사이즈
        -:   74:    int height;                    // 높이
        -:   75:};
        -:   76:
        -:   77:// 팩토리 메서드 적용, 단일 책임원칙을 위해 객체 생성역할 분리, 팩토리 메서드에 위임
        -:   78:class Node_creator
        -:   79:{
        -:   80:};
        -:   81:
        -:   82:class Int_node_creator : public Node_creator
        -:   83:{
        -:   84:public:
        -:   85:    Int_Node *CreateNode(int x);
        -:   86:    virtual Int_Node *Get_Node(int x) = 0;
        -:   87:};
        -:   88:
        -:   89:class AVLtree_Int_node_creator : public Int_node_creator
        -:   90:{
        -:   91:public:
        -:   92:    Int_AVLtree_Node *Get_Node(int x);
        -:   93:};
        -:   94:
        -:   95:#endif
