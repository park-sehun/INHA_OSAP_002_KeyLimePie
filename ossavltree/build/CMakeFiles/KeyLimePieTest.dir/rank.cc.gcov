        -:    0:Source:/home/jihwan/KeyLimePie/ossavltree/rank.cc
        -:    0:Graph:rank.cc.gcno
        -:    0:Data:rank.cc.gcda
        -:    0:Runs:3
        -:    1:/*
        -:    2:BSD-3-Clause
        -:    3:Copyright (c) 2023, Jihwan Kim
        -:    4:All rights reserved.
        -:    5:
        -:    6:Redistribution and use in source and binary forms, with or without
        -:    7:modification, are permitted provided that the following conditions are met:
        -:    8:
        -:    9:* Redistributions of source code must retain the above copyright
        -:   10:notice, this list of conditions and the following disclaimer.
        -:   11:* Redistributions in binary form must reproduce the above copyright
        -:   12:notice, this list of conditions and the following disclaimer in the
        -:   13:documentation and/or other materials provided with the distribution.
        -:   14:* Neither the name of the <organization> nor the
        -:   15:names of its contributors may be used to endorse or promote products
        -:   16:derived from this software without specific prior written permission.
        -:   17:
        -:   18:THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
        -:   19:ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
        -:   20:WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        -:   21:DISCLAIMED. IN NO EVENT SHALL Jihwan Kim BE LIABLE FOR ANY
        -:   22:DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
        -:   23:(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        -:   24:LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
        -:   25:ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
        -:   26:(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
        -:   27:SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        -:   28:
        -:   29:작성자 : 김지환
        -:   30:작성일 : 2023년 11월 19일
        -:   31:*/
        -:   32:#include "data_structure.h"
        -:   33:
      126:   34:std::pair<int, int> Int_AVLtree::Rank(int x)
        -:   35:{ // key값이 x인 노드의 depth와 rank를 출력하는 함수
      126:   36:    Int_AVLtree_Node *node_of_x = Search(getRoot(), x);
      126:   37:    if (node_of_x == NULL)
        -:   38:    {
    #####:   39:        return {-1,-1};
        -:   40:    }
      126:   41:    int rank_of_x = getRank(getRoot(), x) + 1; // rank값 : key값이 x보다 작은 노드의 개수 +1
      126:   42:    int depth = getDepth(node_of_x);
      126:   43:    return {depth, rank_of_x};
        -:   44:}
